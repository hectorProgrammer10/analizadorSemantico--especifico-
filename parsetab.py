
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR DIGITO DO DOT ENDDO ENDWHILE EQ FLOAT ID INT LBRACE LEQ LPAREN PLUS RBRACE RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RESERVADA RPAREN SEMICOLON STRING WHILEprogram : declaration_list statement_listdeclaration_list : declaration_list declaration\n                        | declaration\n                        | emptydeclaration : tipo ID EQ DIGITO SEMICOLON\n                   | tipo ID SEMICOLONstatement_list : statement_list statement\n                      | statement\n                      | emptystatement : DO statement_list ENDDO WHILE LPAREN condition RPAREN ENDWHILEcondition : tipo ID EQ DIGITO \n                 | tipo ID EQ EQ DIGITOtipo : INT\n            | CHAR\n            | FLOATempty :'
    
_lr_action_items = {'DO':([0,2,3,4,9,10,11,12,13,15,16,18,22,28,],[-16,13,-3,-4,13,-2,-8,-9,13,-7,13,-6,-5,-10,]),'INT':([0,2,3,4,10,18,22,23,],[6,6,-3,-4,-2,-6,-5,6,]),'CHAR':([0,2,3,4,10,18,22,23,],[7,7,-3,-4,-2,-6,-5,7,]),'FLOAT':([0,2,3,4,10,18,22,23,],[8,8,-3,-4,-2,-6,-5,8,]),'$end':([0,1,2,3,4,9,10,11,12,15,18,22,28,],[-16,0,-16,-3,-4,-1,-2,-8,-9,-7,-6,-5,-10,]),'ID':([5,6,7,8,25,],[14,-13,-14,-15,27,]),'ENDDO':([11,12,13,15,16,28,],[-8,-9,-16,-7,19,-10,]),'EQ':([14,27,29,],[17,29,30,]),'SEMICOLON':([14,20,],[18,22,]),'DIGITO':([17,29,30,],[20,31,32,]),'WHILE':([19,],[21,]),'LPAREN':([21,],[23,]),'RPAREN':([24,31,32,],[26,-11,-12,]),'ENDWHILE':([26,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,10,]),'empty':([0,2,13,],[4,12,12,]),'tipo':([0,2,23,],[5,5,25,]),'statement_list':([2,13,],[9,16,]),'statement':([2,9,13,16,],[11,15,11,15,]),'condition':([23,],[24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list statement_list','program',2,'p_program','app.py',108),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','app.py',112),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','app.py',113),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','app.py',114),
  ('declaration -> tipo ID EQ DIGITO SEMICOLON','declaration',5,'p_declaration','app.py',118),
  ('declaration -> tipo ID SEMICOLON','declaration',3,'p_declaration','app.py',119),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','app.py',123),
  ('statement_list -> statement','statement_list',1,'p_statement_list','app.py',124),
  ('statement_list -> empty','statement_list',1,'p_statement_list','app.py',125),
  ('statement -> DO statement_list ENDDO WHILE LPAREN condition RPAREN ENDWHILE','statement',8,'p_statement','app.py',129),
  ('condition -> tipo ID EQ DIGITO','condition',4,'p_condition','app.py',133),
  ('condition -> tipo ID EQ EQ DIGITO','condition',5,'p_condition','app.py',134),
  ('tipo -> INT','tipo',1,'p_tipo','app.py',138),
  ('tipo -> CHAR','tipo',1,'p_tipo','app.py',139),
  ('tipo -> FLOAT','tipo',1,'p_tipo','app.py',140),
  ('empty -> <empty>','empty',0,'p_empty','app.py',144),
]
